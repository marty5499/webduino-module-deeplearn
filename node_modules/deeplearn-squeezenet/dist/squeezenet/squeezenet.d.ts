import { Array1D, Array3D, Model, NDArrayMath } from 'deeplearn';
export declare type ActivationName = 'conv_1' | 'maxpool_1' | 'fire2' | 'fire3' | 'maxpool_2' | 'fire4' | 'fire5' | 'maxpool_3' | 'fire6' | 'fire7' | 'fire8' | 'fire9' | 'conv10';
export declare class SqueezeNet implements Model {
    private math;
    private variables;
    private preprocessOffset;
    constructor(math: NDArrayMath);
    load(): Promise<void>;
    predict(input: Array3D): Array1D;
    predictWithActivation(input: Array3D, activationName?: ActivationName): {
        logits: Array1D;
        activation: Array3D;
    };
    private fireModule(input, fireId);
    getTopKClasses(logits: Array1D, topK: number): Promise<{
        [className: string]: number;
    }>;
    dispose(): void;
}
